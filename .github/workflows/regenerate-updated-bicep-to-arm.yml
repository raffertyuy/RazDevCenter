name: Regenerate ARM Templates of updated Biceps

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: write

on:
  push:
    paths:
      - '**/*.bicep'
      - '**/*.parameters.json'

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Bicep CLI
      run: |
        az bicep install
    
    - name: Find and Build Bicep Files to ARM
      shell: bash
      run: |
        echo "Starting Bicep file processing..."
        
        # Get changed Bicep/parameter files, handling both first commit and subsequent commits
        if git rev-parse HEAD^ >/dev/null 2>&1; then
          changed_files=$(git diff --name-only HEAD^ HEAD | grep -E '\.(bicep|parameters\.json)$' || true)
        else
          changed_files=$(git ls-files | grep -E '\.(bicep|parameters\.json)$' || true)
        fi
        
        if [ -z "$changed_files" ]; then
          echo "No Bicep or parameter files changed"
          exit 0
        fi
        
        echo "Found changed Bicep/parameter files:"
        echo "$changed_files"
        
        # Track processed directories to avoid duplicate builds
        declare -A processed_dirs
        
        # Process each changed file
        while IFS= read -r changed_file || [ -n "$changed_file" ]; do
          [ -z "$changed_file" ] && continue
          
          # Validate module references if it's a Bicep file
          if [[ "$changed_file" == *.bicep ]]; then
            dir=$(dirname "$changed_file")
            
            # Extract and validate module paths
            while IFS= read -r module_path || [ -n "$module_path" ]; do
              if [ -n "$module_path" ]; then
                full_module_path="$dir/$module_path"
                if [ ! -f "$full_module_path" ]; then
                  echo "Error: Module file not found: $full_module_path"
                  exit 1
                fi
              fi
            done <<< "$(grep -oP "(?<=module \w+ ['\\\"']).*(?=['\\\"])" "$changed_file" || true)"
          fi
          
          # Find and build main.bicep
          current_dir=$(dirname "$changed_file")
          while [ "$current_dir" != "." ] && [ "$current_dir" != "/" ]; do
            if [ -f "$current_dir/main.bicep" ] && [ -z "${processed_dirs[$current_dir]}" ]; then
              echo "Building main.bicep in $current_dir"
              if az bicep build --file "$current_dir/main.bicep" --outfile "$current_dir/azuredeploy.json"; then
                processed_dirs[$current_dir]=1
                break
              else
                echo "Failed to generate azuredeploy.json in $current_dir"
                exit 1
              fi
            fi
            current_dir=$(dirname "$current_dir")
          done
        done <<< "$changed_files"
    
    - name: Commit and Push Changes
      run: |
        echo "Checking for changes to commit..."
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          echo "Committing and pushing changes..."
          git commit -m "Auto-generate ARM templates from Bicep files"
          git push
        fi
